/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import javax.swing.DefaultListModel;
import javax.swing.DropMode;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.border.LineBorder;
import Controller.ControllerInt;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.KeyboardFocusManager;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.KeyStroke;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Contains all the necesary methods to show the user the application.
 *
 * @author daviddiaz
 *
 *
 */
public class FrameDifferentiator extends javax.swing.JFrame {

    /**
     * Creates new form FrameDifferentiator to show the tables.
     */
    protected List<String> files = new ArrayList<>();
    protected List<File> filesData = new ArrayList<>();
    protected JPanel panelGeneric = new JPanel();
    protected List<String> names = new ArrayList<>();
    protected List<File> usedFiles = new ArrayList<>();
    protected List<JTable> normalTables = new ArrayList<>();
    protected List<JTable> specialTables = new ArrayList<>();
    protected List<JTable> usedTables = new ArrayList<>();
    protected List<String> keywordsUsed = new ArrayList<>();
    protected List<List<Object>> rows = new ArrayList<>();
    protected List<String> coorValues = new ArrayList<>();
    protected ControllerInt controller;
    protected boolean multiTable = false;
    protected boolean searchAdded = false;
    DecorateFrame decorate = new DecorateFrame(this);
    SCFTable scf = new SCFTable(this);
    AverageTable avg = new AverageTable(this);
    ElementsDragAndDrop edd = new ElementsDragAndDrop(this);
    AddTablesEvent ate = new AddTablesEvent(this, decorate, scf, avg);
    CSV csv = new CSV(this);
    PredefineValues pfv = new PredefineValues(this, ate);
    Order od = new Order(this);
    List<String> filesTypes = new ArrayList<>(Arrays.asList("log"));
    protected String temperature = "298.15";
    public List<String> colAndRows = new ArrayList<>();
    JTable tableGeneric;
    String maxValue;

    public FrameDifferentiator(ControllerInt controller) {
        initComponents();
        this.controller = controller;
    }

    public FrameDifferentiator(List<String> files, List<File> filesData, ControllerInt controller, String temperature, String maxValue) {
        initComponents();
        edd.setMappings(listValues);
        this.controller = controller;
        this.files = files;
        this.filesData = filesData;
        this.temperature = temperature;
        this.maxValue = maxValue;
        decorate.addIcons();
        decorate.initElements();
        Set set = new HashSet();
        set.add(KeyStroke.getKeyStroke(KeyEvent.VK_TAB, 0));
        fieldRow.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, set);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogCoordinates = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        fieldRow = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fieldColumn = new javax.swing.JTextField();
        buttonAddValue = new javax.swing.JButton();
        finishButton = new javax.swing.JButton();
        errorDialogCoor = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listValues = new javax.swing.JList<>();
        buttonRemoveItem = new javax.swing.JButton();
        dialogNombre = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        fieldNameValues = new javax.swing.JTextField();
        buttonValues = new javax.swing.JButton();
        dialogTemperature = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        fieldTemperature = new javax.swing.JTextField();
        buttonOKTemp = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        fieldMaxValue = new javax.swing.JTextField();
        dialogAddMoreFiles = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        buttonChooseFiles = new javax.swing.JButton();
        buttonNext = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        textAreaMoreFiles = new javax.swing.JTextArea();
        dialogSCF = new javax.swing.JDialog();
        tabPaneSCF = new javax.swing.JTabbedPane();
        dialogAverageOrder = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        averageTableReorder = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        comboOptions = new javax.swing.JComboBox<>();
        fieldKeyword = new javax.swing.JTextField();
        buttonAdd = new javax.swing.JButton();
        tabbedPane = new javax.swing.JTabbedPane();
        buttonDelete = new javax.swing.JButton();
        buttonExportCSV = new javax.swing.JButton();
        errorText = new javax.swing.JLabel();
        buttonValue = new javax.swing.JButton();
        orderAsc = new javax.swing.JButton();
        orderDesc = new javax.swing.JButton();
        buttonRemoveTable = new javax.swing.JButton();
        buttonAverage = new javax.swing.JButton();
        labelSelect = new javax.swing.JLabel();
        comboSelectRowsOrColumns = new javax.swing.JComboBox<>();
        buttonRemoveColumn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itemSearchValue = new javax.swing.JMenuItem();
        itemExport = new javax.swing.JMenuItem();
        itemReset = new javax.swing.JMenuItem();
        itemChooseFiles = new javax.swing.JMenuItem();
        itemChangeTemperature = new javax.swing.JMenuItem();
        itemAddMoreFiles = new javax.swing.JMenuItem();
        itemSCF = new javax.swing.JMenuItem();
        itemExit = new javax.swing.JMenuItem();

        dialogCoordinates.setTitle("DataPicker4J");
        dialogCoordinates.setResizable(false);

        jLabel2.setText("Row:");

        fieldRow.setFocusCycleRoot(true);
        fieldRow.setNextFocusableComponent(fieldColumn);
        fieldRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldRowActionPerformed(evt);
            }
        });

        jLabel3.setText("Column:");

        fieldColumn.setNextFocusableComponent(fieldRow);
        fieldColumn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldColumnActionPerformed(evt);
            }
        });

        buttonAddValue.setText(">");
        buttonAddValue.setFocusCycleRoot(true);
        buttonAddValue.setFocusable(false);
        buttonAddValue.setNextFocusableComponent(fieldRow);
        buttonAddValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddValueActionPerformed(evt);
            }
        });

        finishButton.setText("Finish");
        finishButton.setFocusable(false);
        finishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishButtonActionPerformed(evt);
            }
        });

        errorDialogCoor.setForeground(new java.awt.Color(255, 0, 0));

        jScrollPane2.setViewportView(listValues);

        buttonRemoveItem.setText("Remove");
        buttonRemoveItem.setFocusable(false);
        buttonRemoveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogCoordinatesLayout = new javax.swing.GroupLayout(dialogCoordinates.getContentPane());
        dialogCoordinates.getContentPane().setLayout(dialogCoordinatesLayout);
        dialogCoordinatesLayout.setHorizontalGroup(
            dialogCoordinatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogCoordinatesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogCoordinatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorDialogCoor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(dialogCoordinatesLayout.createSequentialGroup()
                        .addGroup(dialogCoordinatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(dialogCoordinatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dialogCoordinatesLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fieldColumn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogCoordinatesLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(fieldRow, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(buttonAddValue)))
                .addGroup(dialogCoordinatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogCoordinatesLayout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addGroup(dialogCoordinatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonRemoveItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(finishButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(dialogCoordinatesLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        dialogCoordinatesLayout.setVerticalGroup(
            dialogCoordinatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogCoordinatesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogCoordinatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogCoordinatesLayout.createSequentialGroup()
                        .addGroup(dialogCoordinatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dialogCoordinatesLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(buttonAddValue))
                            .addGroup(dialogCoordinatesLayout.createSequentialGroup()
                                .addGroup(dialogCoordinatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(fieldRow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(dialogCoordinatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(fieldColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(29, 29, 29)
                        .addComponent(errorDialogCoor, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                    .addGroup(dialogCoordinatesLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonRemoveItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(finishButton)))
                .addContainerGap())
        );

        dialogNombre.setTitle("DataPicker4J");

        jLabel4.setText("Choose a name for the values");

        fieldNameValues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNameValuesActionPerformed(evt);
            }
        });

        buttonValues.setText("Ok");
        buttonValues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonValuesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogNombreLayout = new javax.swing.GroupLayout(dialogNombre.getContentPane());
        dialogNombre.getContentPane().setLayout(dialogNombreLayout);
        dialogNombreLayout.setHorizontalGroup(
            dialogNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogNombreLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(dialogNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonValues)
                    .addComponent(fieldNameValues, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(dialogNombreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dialogNombreLayout.setVerticalGroup(
            dialogNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogNombreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldNameValues, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonValues)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dialogTemperature.setTitle("DataPicker4J");

        jLabel5.setText("Temperature:");

        fieldTemperature.setText("298.15");

        buttonOKTemp.setText("Ok");
        buttonOKTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOKTempActionPerformed(evt);
            }
        });

        jLabel7.setText("Max value:");

        javax.swing.GroupLayout dialogTemperatureLayout = new javax.swing.GroupLayout(dialogTemperature.getContentPane());
        dialogTemperature.getContentPane().setLayout(dialogTemperatureLayout);
        dialogTemperatureLayout.setHorizontalGroup(
            dialogTemperatureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogTemperatureLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogTemperatureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogTemperatureLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonOKTemp))
                    .addGroup(dialogTemperatureLayout.createSequentialGroup()
                        .addGroup(dialogTemperatureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(dialogTemperatureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fieldTemperature, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .addComponent(fieldMaxValue))))
                .addContainerGap())
        );
        dialogTemperatureLayout.setVerticalGroup(
            dialogTemperatureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogTemperatureLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogTemperatureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(fieldTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dialogTemperatureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(fieldMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buttonOKTemp)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dialogAddMoreFiles.setTitle("DataPicker4J");

        jLabel6.setText("Choose files:");

        buttonChooseFiles.setText("Open");
        buttonChooseFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChooseFilesActionPerformed(evt);
            }
        });

        buttonNext.setText("Add");
        buttonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNextActionPerformed(evt);
            }
        });

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));

        textAreaMoreFiles.setBackground(new java.awt.Color(255, 255, 255));
        textAreaMoreFiles.setColumns(20);
        textAreaMoreFiles.setRows(5);
        jScrollPane3.setViewportView(textAreaMoreFiles);

        javax.swing.GroupLayout dialogAddMoreFilesLayout = new javax.swing.GroupLayout(dialogAddMoreFiles.getContentPane());
        dialogAddMoreFiles.getContentPane().setLayout(dialogAddMoreFilesLayout);
        dialogAddMoreFilesLayout.setHorizontalGroup(
            dialogAddMoreFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAddMoreFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogAddMoreFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogAddMoreFilesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonNext))
                    .addGroup(dialogAddMoreFilesLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonChooseFiles)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        dialogAddMoreFilesLayout.setVerticalGroup(
            dialogAddMoreFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAddMoreFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogAddMoreFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(buttonChooseFiles))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonNext)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dialogSCF.setTitle("DataPicker4J");
        dialogSCF.setResizable(false);

        javax.swing.GroupLayout dialogSCFLayout = new javax.swing.GroupLayout(dialogSCF.getContentPane());
        dialogSCF.getContentPane().setLayout(dialogSCFLayout);
        dialogSCFLayout.setHorizontalGroup(
            dialogSCFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPaneSCF)
        );
        dialogSCFLayout.setVerticalGroup(
            dialogSCFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPaneSCF)
        );

        dialogAverageOrder.setTitle("DataPicker4J");

        averageTableReorder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(averageTableReorder);

        javax.swing.GroupLayout dialogAverageOrderLayout = new javax.swing.GroupLayout(dialogAverageOrder.getContentPane());
        dialogAverageOrder.getContentPane().setLayout(dialogAverageOrderLayout);
        dialogAverageOrderLayout.setHorizontalGroup(
            dialogAverageOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        dialogAverageOrderLayout.setVerticalGroup(
            dialogAverageOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DataPicker4J");

        jLabel1.setText("Search by keyword:");

        comboOptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Starts with", "Ends with", "Contains", "Range starts with", "Range ends with" }));
        comboOptions.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboOptionsItemStateChanged(evt);
            }
        });

        fieldKeyword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldKeywordActionPerformed(evt);
            }
        });

        buttonAdd.setText("Add");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        tabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbedPaneStateChanged(evt);
            }
        });

        buttonDelete.setText("Reset");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonExportCSV.setText("Export to CSV");
        buttonExportCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportCSVActionPerformed(evt);
            }
        });

        errorText.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        errorText.setForeground(new java.awt.Color(255, 0, 0));
        errorText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        buttonValue.setText("Search value");
        buttonValue.setFocusPainted(false);
        buttonValue.setSelected(true);
        buttonValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonValueActionPerformed(evt);
            }
        });

        orderAsc.setText("Order asc.");
        orderAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderAscActionPerformed(evt);
            }
        });

        orderDesc.setText("Order desc.");
        orderDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderDescActionPerformed(evt);
            }
        });

        buttonRemoveTable.setText("Delete table");
        buttonRemoveTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveTableActionPerformed(evt);
            }
        });

        buttonAverage.setText("Average values");
        buttonAverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAverageActionPerformed(evt);
            }
        });

        labelSelect.setText("Select ");

        comboSelectRowsOrColumns.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rows", "Columns" }));
        comboSelectRowsOrColumns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSelectRowsOrColumnsActionPerformed(evt);
            }
        });

        buttonRemoveColumn.setText("Remove selected column");
        buttonRemoveColumn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveColumnActionPerformed(evt);
            }
        });

        jMenu1.setText("Options");

        itemSearchValue.setText("Search values");
        itemSearchValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSearchValueActionPerformed(evt);
            }
        });
        jMenu1.add(itemSearchValue);

        itemExport.setText("Export to CSV");
        itemExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemExportActionPerformed(evt);
            }
        });
        jMenu1.add(itemExport);

        itemReset.setText("Reset");
        itemReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemResetActionPerformed(evt);
            }
        });
        jMenu1.add(itemReset);

        itemChooseFiles.setText("Choose files");
        itemChooseFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemChooseFilesActionPerformed(evt);
            }
        });
        jMenu1.add(itemChooseFiles);

        itemChangeTemperature.setText("Change temp. and max value");
        itemChangeTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemChangeTemperatureActionPerformed(evt);
            }
        });
        jMenu1.add(itemChangeTemperature);

        itemAddMoreFiles.setText("Add more files");
        itemAddMoreFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAddMoreFilesActionPerformed(evt);
            }
        });
        jMenu1.add(itemAddMoreFiles);

        itemSCF.setText("SCF and energy value");
        itemSCF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSCFActionPerformed(evt);
            }
        });
        jMenu1.add(itemSCF);

        itemExit.setText("Exit");
        itemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemExitActionPerformed(evt);
            }
        });
        jMenu1.add(itemExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonValue))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(comboOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(fieldKeyword, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(buttonAdd))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(buttonExportCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(orderDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(orderAsc, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonRemoveTable, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonAverage, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(labelSelect)
                                .addGap(18, 18, 18)
                                .addComponent(comboSelectRowsOrColumns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonRemoveColumn)))
                        .addGap(0, 326, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(buttonAverage, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(buttonRemoveTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(orderAsc, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(buttonValue, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(buttonExportCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(orderDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldKeyword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(errorText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSelectRowsOrColumns)
                    .addComponent(buttonRemoveColumn))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method used to get the click event.
     *
     * @param evt
     */
    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        names.clear();
        if (fieldKeyword.getText().length() > 0) {
            ate.getUsedFiles(fieldKeyword.getText(), comboOptions.getSelectedItem().toString(), true);
        }
        for (String string : keywordsUsed) {
            System.out.println(string);
        }
    }//GEN-LAST:event_buttonAddActionPerformed

    /**
     * The same function that button add.
     *
     * @param evt
     */
    private void fieldKeywordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldKeywordActionPerformed
        names.clear();
        usedFiles.clear();
        if (fieldKeyword.getText().length() > 0) {
            ate.getUsedFiles(fieldKeyword.getText(), comboOptions.getSelectedItem().toString(), true);
        }
    }//GEN-LAST:event_fieldKeywordActionPerformed

    /**
     * Gets column and rows.
     *
     * @param evt
     */
    private void buttonAddValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddValueActionPerformed
        ate.addValueToList(this.tableGeneric.getRowCount());
    }//GEN-LAST:event_buttonAddValueActionPerformed

    /**
     * Closes the dialog and opens the dialog that asks for a name.
     *
     * @param evt
     */
    private void finishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishButtonActionPerformed
        errorDialogCoor.setText("");
        listValues.setListData(new String[0]);
        coorValues.clear();
        errorDialogCoor.setText("");
        dialogCoordinates.dispose();
        dialogNombre.pack();
        dialogNombre.setVisible(true);
    }//GEN-LAST:event_finishButtonActionPerformed

    /**
     * Gets the name of the myTable and creates it with all the data from the
     * coordinates.
     *
     * @param evt
     */
    private void buttonValuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonValuesActionPerformed
        if (!fieldNameValues.getText().isEmpty()) {
            ate.actionButtondialogName(evt);
        }
    }//GEN-LAST:event_buttonValuesActionPerformed

    /**
     * Button to search myTable values
     *
     * @param evt
     */
    private void itemSearchValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSearchValueActionPerformed
        ListTransferHandler lh = new ListTransferHandler(this);
        listValues.setModel(new DefaultListModel());
        listValues.setDragEnabled(true);
        listValues.setTransferHandler(lh);
        listValues.setDropMode(DropMode.ON_OR_INSERT);
        dialogCoordinates.pack();
        listValues.removeAll();
        dialogCoordinates.setVisible(true);
        colAndRows.clear();
        fieldRow.requestFocusInWindow();
        dialogCoordinates.getRootPane().setDefaultButton(buttonAdd);
    }//GEN-LAST:event_itemSearchValueActionPerformed

    /**
     * Button to export tables to CSV
     *
     * @param evt
     */
    private void itemExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemExportActionPerformed
        csv.exportCSV();
    }//GEN-LAST:event_itemExportActionPerformed

    /**
     * Clears all the tables.
     *
     * @param evt
     */
    private void itemResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemResetActionPerformed
        dialogAddMoreFiles.dispose();
        dialogAverageOrder.dispose();
        dialogCoordinates.dispose();
        dialogNombre.dispose();
        dialogSCF.dispose();
        dialogTemperature.dispose();
        FrameDifferentiator frameDiff = new FrameDifferentiator(files, filesData, controller, temperature, maxValue);
        frameDiff.setVisible(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        frameDiff.setLocation(dim.width / 2 - frameDiff.getSize().width / 2, dim.height / 2 - frameDiff.getSize().height / 2);
        this.dispose();
    }//GEN-LAST:event_itemResetActionPerformed

    /**
     * Clears all the tables.
     *
     * @param evt
     */
    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        dialogAddMoreFiles.dispose();
        dialogAverageOrder.dispose();
        dialogCoordinates.dispose();
        dialogNombre.dispose();
        dialogSCF.dispose();
        dialogTemperature.dispose();
        FrameDifferentiator frameDiff = new FrameDifferentiator(files, filesData, controller, temperature, maxValue);
        frameDiff.setVisible(true);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        frameDiff.setLocation(dim.width / 2 - frameDiff.getSize().width / 2, dim.height / 2 - frameDiff.getSize().height / 2);
        this.dispose();
    }//GEN-LAST:event_buttonDeleteActionPerformed

    /**
     * Method used to export the tables to a CSV file
     *
     * @param evt
     */
    private void buttonExportCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportCSVActionPerformed
        csv.exportCSV();
    }//GEN-LAST:event_buttonExportCSVActionPerformed

    /**
     * Shows the dialog that gets the column and rows.
     *
     * @param evt
     */
    private void buttonValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonValueActionPerformed
        ListTransferHandler lh = new ListTransferHandler(this);
        listValues.setModel(new DefaultListModel());
        listValues.setDragEnabled(true);
        listValues.setTransferHandler(lh);
        listValues.setDropMode(DropMode.ON_OR_INSERT);
        dialogCoordinates.pack();
        listValues.removeAll();
        dialogCoordinates.setVisible(true);
        colAndRows.clear();
        fieldRow.requestFocusInWindow();
        dialogCoordinates.getRootPane().setDefaultButton(buttonAdd);
    }//GEN-LAST:event_buttonValueActionPerformed

    /**
     * Choose files button
     *
     * @param evt
     */
    private void itemChooseFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemChooseFilesActionPerformed
        ChooseFilesFrame chooseFilesFrame = new ChooseFilesFrame(controller);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        chooseFilesFrame.setLocation(dim.width / 2 - chooseFilesFrame.getSize().width / 2, dim.height / 2 - chooseFilesFrame.getSize().height / 2);
        chooseFilesFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_itemChooseFilesActionPerformed

    /**
     * Exit button
     *
     * @param evt
     */
    private void itemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_itemExitActionPerformed

    /**
     * Order selected values desc.
     *
     * @param evt
     */
    private void orderDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderDescActionPerformed
        if (tabbedPane.getSelectedIndex() == 0) {
            od.orderDescAverageTable();
        } else {
            od.orderDescValuesTable();
        }
    }//GEN-LAST:event_orderDescActionPerformed

    /**
     * Order selected values asc.
     *
     * @param evt
     */
    private void orderAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderAscActionPerformed
        if (tabbedPane.getSelectedIndex() == 0) {
            od.orderAscAverageTable();
        } else {
            od.orderAscValuesTable();
        }
    }//GEN-LAST:event_orderAscActionPerformed

    /**
     * Remove item from list
     *
     * @param evt
     */
    private void buttonRemoveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveItemActionPerformed
        listValues.repaint();
        listValues.revalidate();
        if (!listValues.isSelectionEmpty()) {
            coorValues.remove(listValues.getSelectedIndex());
            colAndRows.remove(listValues.getSelectedIndex());
            listValues.setListData(coorValues.toArray(new String[0]));
        }
        listValues.repaint();
        listValues.revalidate();
        this.pack();

    }//GEN-LAST:event_buttonRemoveItemActionPerformed

    /**
     * Text action Coordinations dialog box that adds elements to the jList.
     *
     * @param evt event when you press enter.
     */
    private void fieldColumnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldColumnActionPerformed
        ate.addValueToList(this.tableGeneric.getRowCount());
    }//GEN-LAST:event_fieldColumnActionPerformed

    /**
     * Text action Coordinations dialog box that adds elements to the jList.
     *
     * @param evt event when you press enter.
     */
    private void fieldRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldRowActionPerformed
        ate.addValueToList(this.tableGeneric.getRowCount());
    }//GEN-LAST:event_fieldRowActionPerformed

    /**
     * This button remove tab and myTable of the screen.
     *
     * @param evt Event when you press the button.
     */
    private void buttonRemoveTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveTableActionPerformed
        decorate.removeTable();
    }//GEN-LAST:event_buttonRemoveTableActionPerformed

    /**
     * This method block the delete myTable button when the user is in the first
     * tab.
     *
     * @param evt Event when the user change the tab.
     */
    private void tabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneStateChanged
        try {
            if (tabbedPane.getSelectedIndex() == 0) {
                JPanel panel = (JPanel) tabbedPane.getSelectedComponent();
                if (panel.getComponentCount() > 1) {
                    buttonRemoveTable.setEnabled(true);
                } else {
                    buttonRemoveTable.setEnabled(false);
                }
                buttonAverage.setEnabled(true);
                buttonAverage.setVisible(true);
                comboSelectRowsOrColumns.setEnabled(false);
            } else {
                buttonRemoveTable.setEnabled(true);
                buttonAverage.setEnabled(false);
                comboSelectRowsOrColumns.setEnabled(true);
                
            }
            if (!buttonRemoveTable.isEnabled()) {
                buttonRemoveTable.setToolTipText("\"Average\" table cannot be deleted.");
            } else {
                buttonRemoveTable.setToolTipText(null);
                
            }
            if (tabbedPane.getTabCount() > 1) {
                JPanel myPanel = (JPanel) (tabbedPane.getSelectedComponent());
                JScrollPane scrollPane = (JScrollPane) myPanel.getComponent(0);
                JViewport viewport = scrollPane.getViewport();
                JTable myTable = (JTable) viewport.getView();
                if (specialTables.contains(myTable) || tabbedPane.getSelectedIndex() == 0) {
                    orderAsc.setEnabled(true);
                    orderDesc.setEnabled(true);
                } else {
                    orderAsc.setEnabled(false);
                    orderDesc.setEnabled(false);
                }
            }
            comboSelectRowsOrColumns.setSelectedIndex(0);
        } catch (Exception e) {
        }


    }//GEN-LAST:event_tabbedPaneStateChanged

    /**
     * This method open the dialog to change temperature.
     *
     * @param evt Event when the user press in the item.
     */
    private void itemChangeTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemChangeTemperatureActionPerformed
        fieldTemperature.setText(temperature);
        fieldMaxValue.setText(maxValue);
        dialogTemperature.pack();
        dialogTemperature.setVisible(true);
    }//GEN-LAST:event_itemChangeTemperatureActionPerformed

    /**
     * This method put the new value of the temperature.
     *
     * @param evt Event when press the button.
     */
    private void buttonOKTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOKTempActionPerformed
        if (fieldTemperature.getText().matches("^(-?0[.]\\d+)$|^(-?[1-9]+\\d*([.]\\d+)?)$|^0$")) {
            if (fieldMaxValue.getText().matches("^(-?0[.]\\d+)$|^(-?[1-9]+\\d*([.]\\d+)?)$|^0$")) {
                temperature = fieldTemperature.getText();
                maxValue = fieldMaxValue.getText();
                dialogTemperature.dispose();
                avg.index = 0;
                avg.values.clear();
                pfv.changeValues();
            } else {
                fieldMaxValue.setBorder(new LineBorder(Color.red, 1));
            }
        } else {
            fieldTemperature.setBorder(new LineBorder(Color.red, 1));
        }
    }//GEN-LAST:event_buttonOKTempActionPerformed

    /**
     * This method open the dialog add more file.
     *
     * @param evt Event when the user press in the item.
     */
    private void itemAddMoreFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAddMoreFilesActionPerformed
        edd.enableDragAndDrop();
        BufferedImage bi = null;
        try {
            bi = ImageIO.read(getClass().getResourceAsStream("/ResourceFiles/add-file.png"));
        } catch (IOException ex) {
        }
        decorate.decorate(textAreaMoreFiles, bi);
        dialogAddMoreFiles.setVisible(true);
        dialogAddMoreFiles.pack();
        dialogAddMoreFiles.revalidate();
        dialogAddMoreFiles.repaint();
    }//GEN-LAST:event_itemAddMoreFilesActionPerformed

    /**
     * This method open a frame when you can choose files.
     *
     * @param evt Event when the user press in the button to choose files.
     */
    private void buttonChooseFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChooseFilesActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Files", "log"));
        fileChooser.setMultiSelectionEnabled(true);
        int returnVal = fileChooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            BufferedImage bi = null;
            decorate.decorate(textAreaMoreFiles, bi);
            File[] files = fileChooser.getSelectedFiles();
            for (File file : files) {
                textAreaMoreFiles.append(file.getName() + "\n");
                filesData.add(file);
            }
            dialogAddMoreFiles.pack();
            dialogAddMoreFiles.revalidate();
            dialogAddMoreFiles.repaint();
        }
    }//GEN-LAST:event_buttonChooseFilesActionPerformed

    /**
     * This button close the diialog chooseMoreFiles and add new Files to lists.
     *
     * @param evt Event when the user press in the button.
     */
    private void buttonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNextActionPerformed
        if (textAreaMoreFiles.getText().length() > 0) {
            for (File listFile : filesData) {
                if (!this.files.contains(listFile.getName())) {
                    this.files.add(listFile.getName());
                }
            }
            dialogAddMoreFiles.setVisible(false);
        }
    }//GEN-LAST:event_buttonNextActionPerformed

    /**
     * This method put toolTipeText to the texField of the main frame.
     *
     * @param evt Event when the user choose a option to the combo.
     */
    private void comboOptionsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboOptionsItemStateChanged
        switch (String.valueOf(comboOptions.getSelectedItem())) {
            case "Starts with":
                break;
            case "Ends with":
                fieldKeyword.setToolTipText(null);
                break;
            case "Contains":
                fieldKeyword.setToolTipText(null);
                break;
            case "Range starts with":
                fieldKeyword.setToolTipText("Two values separate by \"-\". I.e: 01-09");
                break;
            default:
                break;
        }
    }//GEN-LAST:event_comboOptionsItemStateChanged

    private void itemSCFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSCFActionPerformed
        dialogSCF.setVisible(true);
        dialogSCF.revalidate();
        dialogSCF.pack();
    }//GEN-LAST:event_itemSCFActionPerformed

    private void buttonAverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAverageActionPerformed
        if (!buttonRemoveTable.isEnabled()) {
            buttonRemoveTable.setEnabled(true);
        }
        errorText.setForeground(Color.RED);
        avg.buttonAverageActionPerformed(evt);
    }//GEN-LAST:event_buttonAverageActionPerformed

    private void fieldNameValuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNameValuesActionPerformed
        if (!fieldNameValues.getText().isEmpty()) {
            ate.actionButtondialogName(evt);
        }

    }//GEN-LAST:event_fieldNameValuesActionPerformed

    private void comboSelectRowsOrColumnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSelectRowsOrColumnsActionPerformed
        try {
            JPanel myPanel = (JPanel) (tabbedPane.getSelectedComponent());
            JScrollPane scrollPane = (JScrollPane) myPanel.getComponent(0);
            JViewport viewport = scrollPane.getViewport();
            JTable table = (JTable) viewport.getView();
            if (comboSelectRowsOrColumns.getSelectedIndex() == 0) {
                table.setColumnSelectionAllowed(false);
                table.setRowSelectionAllowed(true);
                buttonRemoveColumn.setEnabled(true);
            } else {
                table.setColumnSelectionAllowed(true);
                table.setRowSelectionAllowed(false);
                buttonRemoveColumn.setEnabled(true);

            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_comboSelectRowsOrColumnsActionPerformed

    private void buttonRemoveColumnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveColumnActionPerformed
        if (comboSelectRowsOrColumns.getSelectedIndex() == 0) {
            JPanel myPanel = (JPanel) tabbedPane.getSelectedComponent();
            JScrollPane scrollPane = (JScrollPane) myPanel.getComponent(0);
            JViewport viewport = scrollPane.getViewport();
            JTable table = (JTable) viewport.getView();
            List<Integer> indexs = IntStream.of(table.getSelectedRows())
                    .boxed().collect(Collectors.toCollection(ArrayList::new));
            ate.removeRow(indexs);
        } else {
            ate.removeColumn();
        }
    }//GEN-LAST:event_buttonRemoveColumnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable averageTableReorder;
    public javax.swing.JButton buttonAdd;
    public javax.swing.JButton buttonAddValue;
    public javax.swing.JButton buttonAverage;
    private javax.swing.JButton buttonChooseFiles;
    public javax.swing.JButton buttonDelete;
    public javax.swing.JButton buttonExportCSV;
    private javax.swing.JButton buttonNext;
    private javax.swing.JButton buttonOKTemp;
    public javax.swing.JButton buttonRemoveColumn;
    public javax.swing.JButton buttonRemoveItem;
    public javax.swing.JButton buttonRemoveTable;
    public javax.swing.JButton buttonValue;
    private javax.swing.JButton buttonValues;
    public javax.swing.JComboBox<String> comboOptions;
    public javax.swing.JComboBox<String> comboSelectRowsOrColumns;
    public javax.swing.JDialog dialogAddMoreFiles;
    public javax.swing.JDialog dialogAverageOrder;
    private javax.swing.JDialog dialogCoordinates;
    public javax.swing.JDialog dialogNombre;
    public javax.swing.JDialog dialogSCF;
    private javax.swing.JDialog dialogTemperature;
    public javax.swing.JLabel errorDialogCoor;
    public javax.swing.JLabel errorText;
    public javax.swing.JTextField fieldColumn;
    public javax.swing.JTextField fieldKeyword;
    private javax.swing.JTextField fieldMaxValue;
    public javax.swing.JTextField fieldNameValues;
    public javax.swing.JTextField fieldRow;
    private javax.swing.JTextField fieldTemperature;
    public javax.swing.JButton finishButton;
    private javax.swing.JMenuItem itemAddMoreFiles;
    public javax.swing.JMenuItem itemChangeTemperature;
    private javax.swing.JMenuItem itemChooseFiles;
    private javax.swing.JMenuItem itemExit;
    public javax.swing.JMenuItem itemExport;
    public javax.swing.JMenuItem itemReset;
    public javax.swing.JMenuItem itemSCF;
    public javax.swing.JMenuItem itemSearchValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    public javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JLabel labelSelect;
    public javax.swing.JList<String> listValues;
    public javax.swing.JButton orderAsc;
    public javax.swing.JButton orderDesc;
    public javax.swing.JTabbedPane tabPaneSCF;
    public javax.swing.JTabbedPane tabbedPane;
    public javax.swing.JTextArea textAreaMoreFiles;
    // End of variables declaration//GEN-END:variables
}
